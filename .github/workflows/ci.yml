name: CI

on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
  
jobs:
    analysis:
        name: format
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install Flutter
            uses: subosito/flutter-action@v2
            with:
              channel: 'stable'
              architecture: x64
          - name: Analyze code
            run: flutter analyze .
    flutter_tests:
        name: flutter tests
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install Flutter
            uses: subosito/flutter-action@v2
            with:
              flutter-version: '3.19.3'
              channel: stable
              architecture: x64
          - name: Install Flutter dependencies
            run: flutter pub get
          - name: Flutter tests
            run: flutter test
    ios:
        name: ios tests
        runs-on: macos-14-xlarge
        steps:
            - uses: actions/checkout@v4
            - name: Setup Flutter SDK
              uses: subosito/flutter-action@v2
              with:
                channel: stable
            - name: Install Flutter dependencies
              run: flutter pub get
            - uses: futureware-tech/simulator-action@v3
              with:
                model: 'iPhone 15'
            - name: Write sitekeys to file
              env:
                EXAMPLE_DEV_JSON: ${{ secrets.EXAMPLE_DEV_JSON }}
              run: echo "$EXAMPLE_DEV_JSON" >> example/assets/config/dev.json
            - name: Install pods
              run: cd example/ios ; pod install
            - name: Run integration tests
              run: cd example && flutter test integration_test/app_test.dart --timeout none
    android:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            api-level: [33]
            target: [google_apis]
            arch: [x86_64]
        steps:
            - uses: actions/checkout@v4
            - name: Setup Flutter SDK
              uses: subosito/flutter-action@v2
              with:
                channel: stable
            - name: Install Flutter dependencies
              run: flutter pub get
            - name: Write sitekeys to file
              env:
                EXAMPLE_DEV_JSON: ${{ secrets.EXAMPLE_DEV_JSON }}
              run: echo "$EXAMPLE_DEV_JSON" >> example/assets/config/dev.json
            - name: Enable KVM
              run: |
                echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
                sudo udevadm control --reload-rules
                sudo udevadm trigger --name-match=kvm
            - name: Gradle cache
              uses: gradle/actions/setup-gradle@v3              
            - name: AVD cache
              uses: actions/cache@v4
              id: avd-cache
              with:
                path: |
                  ~/.android/avd/*
                  ~/.android/adb*
                key: avd-${{ matrix.api-level }}
            - name: create AVD and generate snapshot for caching
#              if: steps.avd-cache.outputs.cache-hit != 'true'
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                target: ${{ matrix.target }}
                arch: ${{ matrix.arch }}
                force-avd-creation: false
                emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                disable-animations: false
                script: echo "Generated AVD snapshot for caching."                  
                  
            - name: Run integration tests
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                target: ${{ matrix.target }}
                arch: ${{ matrix.arch }}
                script: cd example && flutter build apk && flutter install && flutter test integration_test/app_test.dart --timeout none